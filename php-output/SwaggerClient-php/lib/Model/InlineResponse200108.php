<?php
/**
 * InlineResponse200108
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Vincere REST API
 *
 * Last updated date: **2019-12-03**  Change log on **[GitHub](https://github.com/vincere-io/restful-api-support)**
 *
 * OpenAPI spec version: 2-oas3
 * Contact: integration@vincere.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * InlineResponse200108 Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse200108 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'inline_response_200_108';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'site_manager_report_to_id' => 'float',
'site_manager_report_to_name' => 'string',
'site_manager_email_address' => 'string',
'site_manager_phone_number' => 'string',
'job_site_name' => 'string',
'job_site_details' => 'string',
'job_site_location' => '\Swagger\Client\Model\InlineResponse200101Address'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'site_manager_report_to_id' => null,
'site_manager_report_to_name' => null,
'site_manager_email_address' => null,
'site_manager_phone_number' => null,
'job_site_name' => null,
'job_site_details' => null,
'job_site_location' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'site_manager_report_to_id' => 'site_manager_report_to_id',
'site_manager_report_to_name' => 'site_manager_report_to_name',
'site_manager_email_address' => 'site_manager_email_address',
'site_manager_phone_number' => 'site_manager_phone_number',
'job_site_name' => 'job_site_name',
'job_site_details' => 'job_site_details',
'job_site_location' => 'job_site_location'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'site_manager_report_to_id' => 'setSiteManagerReportToId',
'site_manager_report_to_name' => 'setSiteManagerReportToName',
'site_manager_email_address' => 'setSiteManagerEmailAddress',
'site_manager_phone_number' => 'setSiteManagerPhoneNumber',
'job_site_name' => 'setJobSiteName',
'job_site_details' => 'setJobSiteDetails',
'job_site_location' => 'setJobSiteLocation'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'site_manager_report_to_id' => 'getSiteManagerReportToId',
'site_manager_report_to_name' => 'getSiteManagerReportToName',
'site_manager_email_address' => 'getSiteManagerEmailAddress',
'site_manager_phone_number' => 'getSiteManagerPhoneNumber',
'job_site_name' => 'getJobSiteName',
'job_site_details' => 'getJobSiteDetails',
'job_site_location' => 'getJobSiteLocation'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['site_manager_report_to_id'] = isset($data['site_manager_report_to_id']) ? $data['site_manager_report_to_id'] : null;
        $this->container['site_manager_report_to_name'] = isset($data['site_manager_report_to_name']) ? $data['site_manager_report_to_name'] : null;
        $this->container['site_manager_email_address'] = isset($data['site_manager_email_address']) ? $data['site_manager_email_address'] : null;
        $this->container['site_manager_phone_number'] = isset($data['site_manager_phone_number']) ? $data['site_manager_phone_number'] : null;
        $this->container['job_site_name'] = isset($data['job_site_name']) ? $data['job_site_name'] : null;
        $this->container['job_site_details'] = isset($data['job_site_details']) ? $data['job_site_details'] : null;
        $this->container['job_site_location'] = isset($data['job_site_location']) ? $data['job_site_location'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets site_manager_report_to_id
     *
     * @return float
     */
    public function getSiteManagerReportToId()
    {
        return $this->container['site_manager_report_to_id'];
    }

    /**
     * Sets site_manager_report_to_id
     *
     * @param float $site_manager_report_to_id this is id of site
     *
     * @return $this
     */
    public function setSiteManagerReportToId($site_manager_report_to_id)
    {
        $this->container['site_manager_report_to_id'] = $site_manager_report_to_id;

        return $this;
    }

    /**
     * Gets site_manager_report_to_name
     *
     * @return string
     */
    public function getSiteManagerReportToName()
    {
        return $this->container['site_manager_report_to_name'];
    }

    /**
     * Sets site_manager_report_to_name
     *
     * @param string $site_manager_report_to_name site_manager_report_to_name
     *
     * @return $this
     */
    public function setSiteManagerReportToName($site_manager_report_to_name)
    {
        $this->container['site_manager_report_to_name'] = $site_manager_report_to_name;

        return $this;
    }

    /**
     * Gets site_manager_email_address
     *
     * @return string
     */
    public function getSiteManagerEmailAddress()
    {
        return $this->container['site_manager_email_address'];
    }

    /**
     * Sets site_manager_email_address
     *
     * @param string $site_manager_email_address email
     *
     * @return $this
     */
    public function setSiteManagerEmailAddress($site_manager_email_address)
    {
        $this->container['site_manager_email_address'] = $site_manager_email_address;

        return $this;
    }

    /**
     * Gets site_manager_phone_number
     *
     * @return string
     */
    public function getSiteManagerPhoneNumber()
    {
        return $this->container['site_manager_phone_number'];
    }

    /**
     * Sets site_manager_phone_number
     *
     * @param string $site_manager_phone_number phone number
     *
     * @return $this
     */
    public function setSiteManagerPhoneNumber($site_manager_phone_number)
    {
        $this->container['site_manager_phone_number'] = $site_manager_phone_number;

        return $this;
    }

    /**
     * Gets job_site_name
     *
     * @return string
     */
    public function getJobSiteName()
    {
        return $this->container['job_site_name'];
    }

    /**
     * Sets job_site_name
     *
     * @param string $job_site_name this is site name
     *
     * @return $this
     */
    public function setJobSiteName($job_site_name)
    {
        $this->container['job_site_name'] = $job_site_name;

        return $this;
    }

    /**
     * Gets job_site_details
     *
     * @return string
     */
    public function getJobSiteDetails()
    {
        return $this->container['job_site_details'];
    }

    /**
     * Sets job_site_details
     *
     * @param string $job_site_details this is description of site
     *
     * @return $this
     */
    public function setJobSiteDetails($job_site_details)
    {
        $this->container['job_site_details'] = $job_site_details;

        return $this;
    }

    /**
     * Gets job_site_location
     *
     * @return \Swagger\Client\Model\InlineResponse200101Address
     */
    public function getJobSiteLocation()
    {
        return $this->container['job_site_location'];
    }

    /**
     * Sets job_site_location
     *
     * @param \Swagger\Client\Model\InlineResponse200101Address $job_site_location job_site_location
     *
     * @return $this
     */
    public function setJobSiteLocation($job_site_location)
    {
        $this->container['job_site_location'] = $job_site_location;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
