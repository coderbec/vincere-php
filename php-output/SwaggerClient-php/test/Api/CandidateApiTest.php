<?php
/**
 * CandidateApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Vincere REST API
 *
 * Last updated date: **2019-12-03**  Change log on **[GitHub](https://github.com/vincere-io/restful-api-support)**
 *
 * OpenAPI spec version: 2-oas3
 * Contact: integration@vincere.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;

/**
 * CandidateApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CandidateApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addBankDetail
     *
     * POST: Add a candidate's bank detail.
     *
     */
    public function testAddBankDetail()
    {
    }

    /**
     * Test case for addDesiredJobTypes
     *
     * POST: Add a candidate's desired job type.
     *
     */
    public function testAddDesiredJobTypes()
    {
    }

    /**
     * Test case for addEducationDetails
     *
     * POST: Add a candidate's education details.
     *
     */
    public function testAddEducationDetails()
    {
    }

    /**
     * Test case for addOwner
     *
     * POST: Add a candidate's owner.
     *
     */
    public function testAddOwner()
    {
    }

    /**
     * Test case for addWorkExperience
     *
     * POST: Add a candidate's work experience.
     *
     */
    public function testAddWorkExperience()
    {
    }

    /**
     * Test case for candidateCreate
     *
     * POST: Create Candidate.
     *
     */
    public function testCandidateCreate()
    {
    }

    /**
     * Test case for candidateIdDelete
     *
     * DELETE: Delete candidate.
     *
     */
    public function testCandidateIdDelete()
    {
    }

    /**
     * Test case for createBankDetails
     *
     * PUT: Create or re-create the bank details of candidate.
     *
     */
    public function testCreateBankDetails()
    {
    }

    /**
     * Test case for createDesiredJobTypes
     *
     * PUT: Create or re-create the desired job types of candidate.
     *
     */
    public function testCreateDesiredJobTypes()
    {
    }

    /**
     * Test case for createEducationDetails
     *
     * PUT: Create or re-create the education details of candidate.
     *
     */
    public function testCreateEducationDetails()
    {
    }

    /**
     * Test case for createOwners
     *
     * PUT: Create or re-create the owners of candidate.
     *
     */
    public function testCreateOwners()
    {
    }

    /**
     * Test case for createWorkExperiences
     *
     * PUT: Create or update the work experiences of candidate.
     *
     */
    public function testCreateWorkExperiences()
    {
    }

    /**
     * Test case for getCandidate
     *
     * GET: Candidate details.
     *
     */
    public function testGetCandidate()
    {
    }

    /**
     * Test case for getCandidateBankDetails
     *
     * GET: Candidate's bank details.
     *
     */
    public function testGetCandidateBankDetails()
    {
    }

    /**
     * Test case for getCandidateCompanyLocation
     *
     * GET: company location.
     *
     */
    public function testGetCandidateCompanyLocation()
    {
    }

    /**
     * Test case for getCandidateCurrentLocation
     *
     * GET: current location.
     *
     */
    public function testGetCandidateCurrentLocation()
    {
    }

    /**
     * Test case for getCandidateCustomFields
     *
     * GET: custom fields.
     *
     */
    public function testGetCandidateCustomFields()
    {
    }

    /**
     * Test case for getCandidateEducationDetails
     *
     * GET: Candidate's education details.
     *
     */
    public function testGetCandidateEducationDetails()
    {
    }

    /**
     * Test case for getCandidateFuncExpertises
     *
     * GET: Functional Expertise.
     *
     */
    public function testGetCandidateFuncExpertises()
    {
    }

    /**
     * Test case for getCandidateIndustries
     *
     * GET: industries.
     *
     */
    public function testGetCandidateIndustries()
    {
    }

    /**
     * Test case for getCandidateOwners
     *
     * GET: Candidate's owners.
     *
     */
    public function testGetCandidateOwners()
    {
    }

    /**
     * Test case for getCandidatePersonalLocation
     *
     * GET: personal location.
     *
     */
    public function testGetCandidatePersonalLocation()
    {
    }

    /**
     * Test case for getCandidateSubfunctionalExpertise
     *
     * GET: Subfunctional Expertise.
     *
     */
    public function testGetCandidateSubfunctionalExpertise()
    {
    }

    /**
     * Test case for getCandidateWebappURL
     *
     * GET: Candidate screen in Vincere web application.
     *
     */
    public function testGetCandidateWebappURL()
    {
    }

    /**
     * Test case for getCandidateWorkExperiences
     *
     * GET: Candidate's work experiences.
     *
     */
    public function testGetCandidateWorkExperiences()
    {
    }

    /**
     * Test case for getDesiredJobTypes
     *
     * GET: Candidate's desired job types.
     *
     */
    public function testGetDesiredJobTypes()
    {
    }

    /**
     * Test case for getLayouSetting
     *
     * GET: Compliance setting.
     *
     */
    public function testGetLayouSetting()
    {
    }

    /**
     * Test case for getLayoutDataSetting
     *
     * GET: Compliance setting and data.
     *
     */
    public function testGetLayoutDataSetting()
    {
    }

    /**
     * Test case for linkCandidateFuncAndSubFuncExpertises
     *
     * PUT: link Functional Expertise And Subfunctional Expertise.
     *
     */
    public function testLinkCandidateFuncAndSubFuncExpertises()
    {
    }

    /**
     * Test case for linkCandidateFunctionalExpertises
     *
     * PUT: link Functional Expertise.
     *
     */
    public function testLinkCandidateFunctionalExpertises()
    {
    }

    /**
     * Test case for linkCandidateIndustries
     *
     * PUT: link industries.
     *
     */
    public function testLinkCandidateIndustries()
    {
    }

    /**
     * Test case for linkCandidateSubfunctionalExpertises
     *
     * PUT: link Subfunctional Expertise.
     *
     */
    public function testLinkCandidateSubfunctionalExpertises()
    {
    }

    /**
     * Test case for putCandidateCompanyLocation
     *
     * PUT: create or update company location.
     *
     */
    public function testPutCandidateCompanyLocation()
    {
    }

    /**
     * Test case for putCandidateCurrentLocation
     *
     * PUT: create or update current location.
     *
     */
    public function testPutCandidateCurrentLocation()
    {
    }

    /**
     * Test case for putCandidateCustomFields
     *
     * PUT: create or update custom fields.
     *
     */
    public function testPutCandidateCustomFields()
    {
    }

    /**
     * Test case for putCandidateHotPeriod
     *
     * PUT: Set a candidate as hot candidate.
     *
     */
    public function testPutCandidateHotPeriod()
    {
    }

    /**
     * Test case for putCandidatePersonalLocation
     *
     * PUT: create or update personal location.
     *
     */
    public function testPutCandidatePersonalLocation()
    {
    }

    /**
     * Test case for updateCandidate
     *
     * PUT: Update Candidate.
     *
     */
    public function testUpdateCandidate()
    {
    }
}
