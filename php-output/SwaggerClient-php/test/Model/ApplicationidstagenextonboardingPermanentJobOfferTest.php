<?php
/**
 * ApplicationidstagenextonboardingPermanentJobOfferTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Vincere REST API
 *
 * Last updated date: **2019-12-03**  Change log on **[GitHub](https://github.com/vincere-io/restful-api-support)**
 *
 * OpenAPI spec version: 2-oas3
 * Contact: integration@vincere.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * ApplicationidstagenextonboardingPermanentJobOfferTest Class Doc Comment
 *
 * @category    Class
 * @description **Mandatory if the job application has no offer before. Otherwise, this field is ignored.**
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ApplicationidstagenextonboardingPermanentJobOfferTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "ApplicationidstagenextonboardingPermanentJobOffer"
     */
    public function testApplicationidstagenextonboardingPermanentJobOffer()
    {
    }

    /**
     * Test attribute "annual_paid_holiday"
     */
    public function testPropertyAnnualPaidHoliday()
    {
    }

    /**
     * Test attribute "annual_paid_sick_day"
     */
    public function testPropertyAnnualPaidSickDay()
    {
    }

    /**
     * Test attribute "annual_salary"
     */
    public function testPropertyAnnualSalary()
    {
    }

    /**
     * Test attribute "currency_type"
     */
    public function testPropertyCurrencyType()
    {
    }

    /**
     * Test attribute "exempt_incentives"
     */
    public function testPropertyExemptIncentives()
    {
    }

    /**
     * Test attribute "guarantee_incentives"
     */
    public function testPropertyGuaranteeIncentives()
    {
    }

    /**
     * Test attribute "months_per_year"
     */
    public function testPropertyMonthsPerYear()
    {
    }

    /**
     * Test attribute "other_costs"
     */
    public function testPropertyOtherCosts()
    {
    }

    /**
     * Test attribute "percentage_of_annual_salary"
     */
    public function testPropertyPercentageOfAnnualSalary()
    {
    }

    /**
     * Test attribute "personal_info"
     */
    public function testPropertyPersonalInfo()
    {
    }

    /**
     * Test attribute "salary_from"
     */
    public function testPropertySalaryFrom()
    {
    }

    /**
     * Test attribute "salary_to"
     */
    public function testPropertySalaryTo()
    {
    }

    /**
     * Test attribute "salary_type"
     */
    public function testPropertySalaryType()
    {
    }

    /**
     * Test attribute "statutory_govt_tax"
     */
    public function testPropertyStatutoryGovtTax()
    {
    }

    /**
     * Test attribute "use_quick_fee_forecast"
     */
    public function testPropertyUseQuickFeeForecast()
    {
    }

    /**
     * Test attribute "working_day_per_month"
     */
    public function testPropertyWorkingDayPerMonth()
    {
    }

    /**
     * Test attribute "working_day_per_week"
     */
    public function testPropertyWorkingDayPerWeek()
    {
    }

    /**
     * Test attribute "working_hour_per_day"
     */
    public function testPropertyWorkingHourPerDay()
    {
    }

    /**
     * Test attribute "working_week_per_month"
     */
    public function testPropertyWorkingWeekPerMonth()
    {
    }
}
